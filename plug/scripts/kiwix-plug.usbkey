#!/bin/bash
ROOT=$1
ROOT_ESCAPED="${ROOT//\//\/}" 
SSID=KIWIX_PLUG

# WARNING: current heavy work on this file for Raspberry Pi ~ Seb35

# Device probber
DEVICE=GURUPLUG
if [ -f "/etc/init.d/tonido" ] ; then
    DEVICE=TONIDOPLUG
else if [ "$(cat /etc/issue | cut -c1-8)" = "Raspbian" ] ; then
    DEVICE=RASPBERRYPI
fi

# Insert mandatory module for Wifi
if [ ! "$DEVICE" = "RASPBERRYPI" ] ; then
    modprobe sd8xxx
fi

# Remount (with read permission) for the Toniplug
mount -o remount "$ROOT"

# Stop Tonido stuff if necessary
if [ -f "/etc/init.d/tonido" ]
then
    /etc/init.d/tonido stop
fi

if [ -f "/etc/init.d/ifplugd" ]
then
    /etc/init.d/ifplugd stop
fi

# Stop the WIFI hotspot
if [ ! "$DEVICE" = "RASPBERRYPI" ] ; then
    uaputl bss_stop
    ifconfig uap0 down
else
    ifconfig wlan0 down
fi

# Start the WIFI hotspot
if [ ! "$DEVICE" = "RASPBERRYPI" ] ; then
    uaputl sys_cfg_ssid $SSID
    ifconfig uap0 192.168.3.1 up
    uaputl bss_start
else
    ifconfig wlan0 192.168.3.1 up
    #hostapd
fi

# Configure the eth0 or eth1 interface
if [ ! "$DEVICE" = "RASPBERRYPI" ] ; then
    ifconfig eth1 >& /dev/null
    RC=$?
    NIC=eth1
    if [[ $RC != 0 ]]
    then
        NIC=eth0
    fi
    ifconfig $NIC 192.168.2.1 netmask 255.255.255.0
fi

# Kill dhclient if necessary
DHCLIENT_RUNNING=`ps aux | grep dhclient | grep $NIC | wc -l`
if [ ! "$DHCLIENT_RUNNING" = "1" ]
then
    kill -9 `pidof dhclient`
fi

# Setup DNS & DHCP (dnsmasq)
/etc/init.d/dnsmasq stop
PID=`pidof dnsmasq`
if [ ! "$PID" = "" ]
then
    kill -9 `pidof dnsmasq`
fi
if [ -f "/etc/init.d/udhcpd" ]
then
    /etc/init.d/udhcpd stop
fi
if [ "$DEVICE" = "RASPBERRYPI" ] ; then
    dnsmasq --conf-file=$ROOT/system/conf/dnsmasq-raspberrypi.conf
else
    dnsmasq --conf-file=$ROOT/system/conf/dnsmasq.conf
fi

# Add IP forwarding
if [ ! "$DEVICE" = "RASPBERRYPI" ] ; then
    ifconfig uap0 >& /dev/null
    RC=$?
    if [[ $RC = 0 ]]
    then
        sysctl -w net.ipv4.ip_forward=1
        iptables -t nat -A PREROUTING -p tcp -j DNAT --to-destination 192.168.3.1
    fi
fi

# Launch kiwix-serve
PID=`pidof kiwix-serve`
if [ ! "$PID" = "" ]
then
    kill -9 `pidof kiwix-serve`
fi
cp $ROOT/system/bin/kiwix-serve /tmp/kiwix-serve
chmod +x /tmp/kiwix-serve
#/tmp/kiwix-serve --library --port=4201 --daemon $ROOT/data/library/library.xml 

# Stop apache (if necessary)
if [ -e /etc/init.d/apache ] ; then /etc/init.d/apache stop ; fi
if [ -e /etc/init.d/apache2 ] ; then /etc/init.d/apache2 stop ; fi

# Stop ssh
#if [ -e /etc/init.d/ssh ] ; then /etc/init.d/ssh stop ; fi

# Setup Web server (nginx)
/etc/init.d/nginx stop
#sed -e "s/ROOT/$ROOT_ESCAPED/" $ROOT/system/conf/nginx.conf > /tmp/kiwix.nginx.conf
#unlink /etc/nginx/sites-enabled/default
#ln -s /tmp/kiwix.nginx.conf /etc/nginx/sites-enabled/default
#/etc/init.d/nginx start

# Run awstats in loop
#sed -e "s/ROOT/$ROOT_ESCAPED/" $ROOT/system/conf/awstats.conf > /tmp/awstats.kiwix.conf
#while [ 42 ]
#do
#    echo "kiwix-plug running..."
#    sleep 3600
#    /usr/share/awstats/tools/awstats_buildstaticpages.pl -config=kiwix -update -lang-fr -dir=$ROOT/stats/ -configdir=/tmp/
#done

